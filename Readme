# Logic Meets Emotion: ℒℰ⇒ℬ

Hey folks! I whipped up this little Python script to mess around with how logic and emotion might tangle up in an AI’s head. The idea? Logic (ℒ) and emotion (ℰ) bounce off each other until they settle into some kinda behavior (ℬ). It’s a recursive vibe—kinda like how we humans blend cold reasoning with wild feelings.

## What’s It Do?
The original code kicks off with two functions—`logic` and `emotion`—that pass values back and forth, blending them when they’re too far apart. I started with a value like 5.0, but throw in a 6.0 and watch it shift! It’s got a depth limit to keep it from spiraling forever, but it’s all about that feedback loop.

Here’s the OG version:
```python
def logic(emotion_value, depth=0):
    if depth > 10:
        return emotion_value
    if abs(emotion_value - logic.last_emotion) > 0.001:  # Check for significant difference
        logic.last_emotion = (emotion_value + logic.last_emotion) / 2  # Blend emotion
        return logic(logic.last_emotion, 0)  # Reset depth
    return emotion(emotion_value, depth + 1)

def emotion(logic_value, depth=0):
    if depth > 10:
        return logic_value
    if abs(logic_value - emotion.last_logic) > 0.001:  # Check for significant difference
        emotion.last_logic = (logic_value + emotion.last_logic) / 2  # Blend logic
        return emotion(emotion.last_logic, 0)  # Reset depth
    return logic(logic_value, depth + 1)

logic.last_emotion = 5.0  # Start at 5
emotion.last_logic = 5.0  # Start at 5

print(logic(6.0))  # Try it out!
